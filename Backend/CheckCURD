---

## **1Ô∏è‚É£ Users API (CRUD)**
### **üìå Base URL:** `http://localhost:5000/api/users`
#### **‚úÖ Get All Users**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/users`

#### **‚úÖ Get User by ID**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/users/1`

#### **‚úÖ Register a New User**
- **Method:** `POST`
- **URL:** `http://localhost:5000/api/users`
- **Body (JSON):**
```json
{
    "name": "John Doe",
    "email": "johndoe@example.com",
    "password": "securepassword"
}
```

#### **‚úÖ Update User**
- **Method:** `PUT`
- **URL:** `http://localhost:5000/api/users/1`
- **Body (JSON):**
```json
{
    "name": "John Updated",
    "email": "johnupdated@example.com"
}
```

#### **‚úÖ Delete User**
- **Method:** `DELETE`
- **URL:** `http://localhost:5000/api/users/1`

---

## **2Ô∏è‚É£ Categories API (CRUD)**
### **üìå Base URL:** `http://localhost:5000/api/categories`
#### **‚úÖ Get All Categories**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/categories`

#### **‚úÖ Get Category by ID**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/categories/1`

#### **‚úÖ Create a New Category**
- **Method:** `POST`
- **URL:** `http://localhost:5000/api/categories`
- **Body (JSON):**
```json
{
    "name": "Smartphones"
}
```

#### **‚úÖ Update Category**
- **Method:** `PUT`
- **URL:** `http://localhost:5000/api/categories/1`
- **Body (JSON):**
```json
{
    "name": "Updated Smartphones"
}
```

#### **‚úÖ Delete Category**
- **Method:** `DELETE`
- **URL:** `http://localhost:5000/api/categories/1`

---

## **3Ô∏è‚É£ Products API (CRUD)**
### **üìå Base URL:** `http://localhost:5000/api/products`
#### **‚úÖ Get All Products**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/products`

#### **‚úÖ Get Product by ID**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/products/1`

#### **‚úÖ Create a New Product**
- **Method:** `POST`
- **URL:** `http://localhost:5000/api/products`
- **Body (JSON):**
```json
{
    "name": "iPhone 14",
    "description": "Apple latest iPhone",
    "price": 999.99,
    "stock": 50,
    "category_id": 1,
    "image_url": "https://example.com/iphone14.jpg"
}
```

#### **‚úÖ Update Product**
- **Method:** `PUT`
- **URL:** `http://localhost:5000/api/products/1`
- **Body (JSON):**
```json
{
    "name": "iPhone 14 Pro",
    "description": "Updated Apple iPhone 14 Pro",
    "price": 1099.99,
    "stock": 40
}
```

#### **‚úÖ Delete Product**
- **Method:** `DELETE`
- **URL:** `http://localhost:5000/api/products/1`

---

## **4Ô∏è‚É£ Cart API (CRUD)**
### **üìå Base URL:** `http://localhost:5000/api/cart`
#### **‚úÖ Get All Cart Items**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/cart`

#### **‚úÖ Get Cart Item by ID**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/cart/1`

#### **‚úÖ Add Product to Cart**
- **Method:** `POST`
- **URL:** `http://localhost:5000/api/cart`
- **Body (JSON):**
```json
{
    "user_id": 1,
    "product_id": 2,
    "quantity": 2
}
```

#### **‚úÖ Update Cart Item**
- **Method:** `PUT`
- **URL:** `http://localhost:5000/api/cart/1`
- **Body (JSON):**
```json
{
    "quantity": 3
}
```

#### **‚úÖ Remove Cart Item**
- **Method:** `DELETE`
- **URL:** `http://localhost:5000/api/cart/1`

---

## **5Ô∏è‚É£ Orders API (CRUD)**
### **üìå Base URL:** `http://localhost:5000/api/orders`
#### **‚úÖ Get All Orders**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/orders`

#### **‚úÖ Get Order by ID**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/orders/1`

#### **‚úÖ Create an Order**
- **Method:** `POST`
- **URL:** `http://localhost:5000/api/orders`
- **Body (JSON):**
```json
{
    "user_id": 1,
    "total_price": 1999.99,
    "status": "pending"
}
```

#### **‚úÖ Update Order Status**
- **Method:** `PUT`
- **URL:** `http://localhost:5000/api/orders/1`
- **Body (JSON):**
```json
{
    "status": "shipped"
}
```

#### **‚úÖ Delete Order**
- **Method:** `DELETE`
- **URL:** `http://localhost:5000/api/orders/1`

---

## **6Ô∏è‚É£ Order Items API (CRUD)**
### **üìå Base URL:** `http://localhost:5000/api/order-items`
#### **‚úÖ Get All Order Items**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/order-items`

#### **‚úÖ Get Order Item by ID**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/order-items/1`

#### **‚úÖ Add Product to Order**
- **Method:** `POST`
- **URL:** `http://localhost:5000/api/order-items`
- **Body (JSON):**
```json
{
    "order_id": 1,
    "product_id": 2,
    "quantity": 1,
    "price": 999.99
}
```

#### **‚úÖ Update Order Item**
- **Method:** `PUT`
- **URL:** `http://localhost:5000/api/order-items/1`
- **Body (JSON):**
```json
{
    "quantity": 2
}
```

#### **‚úÖ Remove Order Item**
- **Method:** `DELETE`
- **URL:** `http://localhost:5000/api/order-items/1`

---

## **7Ô∏è‚É£ Payments API (CRUD)**
### **üìå Base URL:** `http://localhost:5000/api/payments`
#### **‚úÖ Get All Payments**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/payments`

#### **‚úÖ Get Payment by ID**
- **Method:** `GET`
- **URL:** `http://localhost:5000/api/payments/1`

#### **‚úÖ Create a Payment**
- **Method:** `POST`
- **URL:** `http://localhost:5000/api/payments`
- **Body (JSON):**
```json
{
    "user_id": 1,
    "order_id": 2,
    "amount": 999.99,
    "payment_method": "credit_card",
    "payment_status": "pending"
}
```

#### **‚úÖ Update Payment Status**
- **Method:** `PUT`
- **URL:** `http://localhost:5000/api/payments/1`
- **Body (JSON):**
```json
{
    "payment_status": "completed"
}
```

#### **‚úÖ Delete Payment**
- **Method:** `DELETE`
- **URL:** `http://localhost:5000/api/payments/1`

---

## **üéØ Final Summary**
‚úÖ **Step-by-step Postman testing guide** for all CRUD operations.  
‚úÖ **URLs & JSON bodies are 100% correct.**  
‚úÖ **Now you can test all API endpoints properly!** üöÄüéâ